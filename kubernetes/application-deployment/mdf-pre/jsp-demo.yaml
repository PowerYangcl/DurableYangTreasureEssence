kind: Deployment
apiVersion: apps/v1
metadata:
  name: jsp-demo
  namespace: mdf-pre
  labels:
    app: jsp-demo
  annotations:
    deployment.kubernetes.io/revision: '16'
    kubesphere.io/creator: dev-liu
    kubesphere.io/relatedHPA: jsp-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: jsp-demo
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jsp-demo
      annotations:
        kubesphere.io/creator: dev-liu
        kubesphere.io/imagepullsecrets: '{}'
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
      containers:
        - name: container-hgpyv8
          image: >-
            registry.cn-beijing.aliyuncs.com/power-matrix/matrix-jsp-demo:v_pre_8
          ports:
            - name: tcp-8080
              containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Service
apiVersion: v1
metadata:
  name: matrix-jsp-demo
  namespace: mdf-pre
  labels:
    app: matrix-jsp-demo
    app.kubernetes.io/name: matrix-jsp-demo
    app.kubernetes.io/version: v1
    version: v1
  annotations:
    kubesphere.io/creator: dev-liu
    kubesphere.io/serviceType: statelessservice
    servicemesh.kubesphere.io/enabled: 'true'
spec:
  ports:
    - name: tcp-8080
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 31581
  selector:
    app: jsp-demo
  clusterIP: 10.233.8.137
  clusterIPs:
    - 10.233.8.137
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster















