<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.matrix.dao.IAcApiDomainMapper">
	
	<!-- 基类字段映射 -->
	<resultMap id="BaseMap" type="com.matrix.base.BaseEntity"> 
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
		<result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
		<result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
		<result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="BaseResultMap" type="com.matrix.pojo.entity.AcApiDomain" extends="BaseMap">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="ac_api_info_id" property="acApiInfoId" jdbcType="BIGINT" />
		<result column="ac_include_domain_id" property="acIncludeDomainId" jdbcType="BIGINT" />
	</resultMap>
	
	
	<select id="find" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
			*
		from 
			ac_api_domain
		where 
			id = #{id , jdbcType=BIGINT}
	</select>
	
	<resultMap id="AcApiDomainView" type="com.matrix.pojo.view.AcApiDomainView"></resultMap>
	<select id="selectByApiInfoId" resultMap="AcApiDomainView" parameterType="java.lang.Long">
		select
			ad.ac_include_domain_id as id,
			i.domain as domain,
			i.company_name as companyName 
		from 
			ac_api_domain ad left join ac_include_domain i on ad.ac_include_domain_id = i.id
		where 
			ad.ac_api_info_id = #{apiInfoId}
		and 
			i.flag = 1
	</select>
	
	
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from ac_api_domain where id = #{id,jdbcType=BIGINT}
	</delete>
	
	
	<delete id="deleteByApiInfoId" parameterType="java.lang.Long">
		delete from ac_api_domain where ac_api_info_id = #{apiInfoId} 
	</delete>
	
	<insert id="insertSelective" parameterType="com.matrix.pojo.entity.AcApiDomain">
		insert into ac_api_domain
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="acApiInfoId != null">
				ac_api_info_id,
			</if>
			<if test="acIncludeDomainId != null">
				ac_include_domain_id,
			</if>
			
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUserId != null">
				create_user_id,
			</if>
			<if test="createUserName != null">
				create_user_name,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUserId != null">
				update_user_id,
			</if>
			<if test="updateUserName != null">
				update_user_name,
			</if>
			<if test="deleteFlag != null">
				delete_flag,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="acApiInfoId != null">
				#{acApiInfoId,jdbcType=BIGINT},
			</if>
			<if test="acIncludeDomainId != null">
				#{acIncludeDomainId,jdbcType=BIGINT},
			</if>
			
			<if test="createTime != null">
				#{createTime , jdbcType=TIMESTAMP},
			</if>
			<if test="createUserId != null">
				#{createUserId , jdbcType=BIGINT},
			</if>
			<if test="createUserName != null">
				#{createUserName , jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime , jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId , jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				#{updateUserName , jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				#{deleteFlag , jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	
	<update id="updateSelective" parameterType="com.matrix.pojo.entity.AcApiDomain">
		update ac_api_domain
		<set>
			<if test="acApiInfoId != null">
				ac_api_info_id = #{acApiInfoId,jdbcType=BIGINT},
			</if>
			<if test="acIncludeDomainId != null">
				ac_include_domain_id = #{acIncludeDomainId,jdbcType=BIGINT},
			</if>
			
			<if test="updateTime != null">
				update_time = #{updateTime , jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				update_user_id = #{updateUserId , jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				update_user_name = #{updateUserName , jdbcType=VARCHAR},
			</if>
			<if test="deleteFlag != null">
				delete_flag = #{deleteFlag , jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
</mapper>









