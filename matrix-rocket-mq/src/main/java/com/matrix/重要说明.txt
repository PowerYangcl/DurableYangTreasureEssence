
本模块封装于：org.apache.rocketmq 4.5.0。rocketmq-client端版本需要与Linux集群版本一致，否则会出错。

	4.5.0版本特性如下：
	        该版本引入了 Dledger 的多副本技术，可实现多地多中心场景下的自动容灾切换，并保障切换过程中数据的完整性和一致性
	        支持分布式事务(此特性在3.2.6版本删除，在4.3.0版本恢复)
	        
	 4.4.0版本新增特性如下：
	 		权限控制（ACL）       
	        	    该特性主要为 RocketMQ提供权限访问控制。其中，用户可以通过yaml配置文件来定义权限访问的相关属性，包括白名单IP地址、
	        	    用户的AK/SK访问秘钥对、Topic和ConsumerGroup的访问权限。这样，Topic资源之间也就具备了一定的隔离性，用户无法访问
	        	    没有权限的Topic资源。同时，开源用户使用带有ACL鉴权信息的开源客户端可以无缝对接云MQ，而无需对业务系统进行任何的其他改造。
	        消息轨迹（Message Trace）
                    消息轨迹主要指的是一条消息从生产方发出到消费方消费处理，整个过程中的各个相关节点的时间地点等数据汇聚而成的完整链路
                    信息。RocketMQ中的一条消息的完整链路包含消息生产方、Broker服务方、消息消费方三个角色，这其中每个部分处理消息的过
                    程中都会在轨迹链路中增加相关的信息，将这些信息汇聚即可获取任意消息的当前状态，从而为生产环境中的问题排查提供强有力的数据支持。
    
    
    
    
Dledger 快速搭建指南：
	https://github.com/apache/rocketmq/blob/master/docs/cn/dledger/quick_start.md

Apache RocketMQ 开发者指南(中文文档)：
	https://github.com/apache/rocketmq/tree/master/docs/cn    
    
    
Q&A
		Q1：分布式消息系统中，如何避免消息重复？
				造成消息重复的根本原因是：网络不可靠。只要通过网络交换数据，就无法避免这个问题。所以解决这个问题的办法就是绕过这个问题。 
		那么问题就变成了：如果消费端收到两条一样的消息，应该怎样处理？消费端处理消息的业务逻辑保持幂等性;
		保证每条消息都有唯一编号且保证消息处理成功与去重表的日志同时出现。
		通过幂等性，不管来多少条重复消息，可以实现处理的结果都一样。再利用一张日志表来记录已经处理成功的消息的ID，
		如果新到的消息ID已经在日志表中， 那么就可以不再处理这条消息，避免消息的重复处理。

		Q2：顺序消息扩容的过程中，如何在不停写的情况下保证消息顺序？
				成倍扩容，实现扩容前后，同样的key，hash到原队列，或者hash到新扩容的队列；扩容前，记录旧队列中的最大位点；
		对于每个Consumer Group，保证旧队列中的数据消费完，再消费新队列，也即：先对新队列进行禁读即可；

		Q3：分布式消息系统中，如何对消息进行重放？
				消费位点就是一个数字，把Consumer Offset改一下就可以达到重放的目的了。




https://github.com/apache/rocketmq/tree/release-4.5.0/docs/cn
https://github.com/apache/rocketmq/blob/release-4.5.0/docs/cn/acl/user_guide.md
https://github.com/apache/rocketmq/blob/release-4.5.0/docs/cn/RocketMQ_Example.md



RocketMQ事务消费和顺序消费详解
http://www.cnblogs.com/520playboy/p/6750023.html


https://www.cnblogs.com/Jtianlin/p/8436024.html
RocketMQ 顺序消费只消费一次：这个地方有一个大坑，注册监听类的时候，不能使用匿名内部类。不然的话，只会消费一次，然后消费者就挂了；监听类要单独写！！！


RocketMQ事务消费和顺序消费详解
https://www.cnblogs.com/520playboy/p/6750023.html

Rocket重试机制，消息模式，刷盘方式
https://www.cnblogs.com/520playboy/p/6748680.html




String str = new String(body, "UTF-8");














